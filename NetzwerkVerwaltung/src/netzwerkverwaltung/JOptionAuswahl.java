/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JOptionAuswahl.java
 *
 * Created on 19.03.2012, 13:40:50
 */
package netzwerkverwaltung;

import java.io.*;

/**
 *
 * @author manfred.fischer
 */
public class JOptionAuswahl extends javax.swing.JFrame {

    String IP;

    /** Creates new form JOptionAuswahl */
    public JOptionAuswahl(String ip, HauptBildschirm h) {
        initComponents();
        IP = ip;
        IPName.setText("IP: " + ip);
        this.setLocationRelativeTo(h);
        try {

            BufferedReader read = new BufferedReader(new FileReader(new File("Config/configJOAuswahl.cfg")));
            String lesen = read.readLine();
            if (lesen.equals("##config")) {
                user.setText(read.readLine());
                domain.setText(read.readLine());
                save.setSelected(true);
            }

        } catch (Exception ex) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        r = new javax.swing.JRadioButton();
        b = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        v = new javax.swing.JRadioButton();
        p = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        IPName = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        save = new javax.swing.JCheckBox();
        domain = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                save(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        r.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(r);
        r.setSelected(true);
        r.setText("Remote Zugriff");

        b.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(b);
        b.setText("Browser");

        jButton1.setText("Auswahl");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        v.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(v);
        v.setText("VNC Zugriff*");

        p.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(p);
        p.setText("Ping Test");

        jLabel1.setText("* muss Installiert sein ");

        IPName.setText("..");

        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });

        jLabel2.setText("User:");

        save.setBackground(new java.awt.Color(255, 255, 255));
        save.setText("save");

        domain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domainActionPerformed(evt);
            }
        });

        jLabel4.setText("Domain: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(IPName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(26, 26, 26)
                                .addComponent(user))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(r)
                                    .addComponent(v))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(p)
                                    .addComponent(b)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jButton1)))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(save)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(domain, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)))
                        .addGap(10, 10, 10))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(r)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(v))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(p)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(IPName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(domain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


        if (r.isSelected()) {
            try {
                Process p1;
                if (!user.getText().equals("")) {
                    File datei = new File("Config/mstsc.rdp");
                    BufferedWriter write = new BufferedWriter(new FileWriter(datei));
                    write.write("screen mode id:i:2\n");
                    write.write("username:s:" + user.getText() + "\n");
                    write.write("domain:s:" + domain.getText() + "\n");
                    write.write("full address:s:" + IP);
                    write.close();
                    String[] f = datei.getAbsolutePath().split("\\\\");
                    String dateipfad = f[0];
                    for (int i = 1; i < f.length; i++) {
                        String[] g = f[i].split(" ");
                        if (g.length > 1) {
                            dateipfad = dateipfad + "\\\"" + f[i] + "\"";
                        } else {
                            dateipfad = dateipfad + "\\" + f[i];
                        }
                    }
                    p1 = Runtime.getRuntime().exec("C:/WINDOWS/system32/cmd.exe /C start " + dateipfad);

                } else {
                    p1 = Runtime.getRuntime().exec("C:/WINDOWS/system32/cmd.exe /C start mstsc /v: " + IP);
                }

            } catch (IOException ex) {
            }
        } else if (v.isSelected()) {
            try {


                Process p1 = Runtime.getRuntime().exec("C:/WINDOWS/system32/cmd.exe /C start C:/\"Program Files (x86)\"/RealVNC/VNC4/vncviewer.exe " + IP);

            } catch (IOException ex) {
            }
        } else if (p.isSelected()) {
            try {


                Process p1 = Runtime.getRuntime().exec("C:/WINDOWS/system32/cmd.exe /C start ping " + IP + " -t");

            } catch (IOException ex) {
            }
        } else if (false) {
            try {
                CheckIP ch = new CheckIP();
                Process p1 = Runtime.getRuntime().exec("C:/WINDOWS/system32/cmd.exe /C ipconfig /all");
                BufferedReader in = new BufferedReader(new InputStreamReader(p1.getInputStream()));
                String line = null;
                while ((line = in.readLine()) != null) {
                    if (!line.equals("")) {
                        ch.info.append(line + "\n");
                    }
                }
            } catch (IOException ex) {
            }
        } else if (false) {
            try {
                CheckIP ch = new CheckIP();
                Process p1 = Runtime.getRuntime().exec("C:/WINDOWS/system32/cmd.exe /C ipconfig /release");
                BufferedReader in = new BufferedReader(new InputStreamReader(p1.getInputStream()));
                String line = null;
                while ((line = in.readLine()) != null) {
                    if (!line.equals("")) {
                        ch.info.append(line + "\n");
                    }
                }
            } catch (IOException ex) {
            }
        } else if (false) {
            try {
                CheckIP ch = new CheckIP();
                Process p1 = Runtime.getRuntime().exec("C:/WINDOWS/system32/cmd.exe /C ipconfig /renew");
                BufferedReader in = new BufferedReader(new InputStreamReader(p1.getInputStream()));
                String line = null;
                while ((line = in.readLine()) != null) {
                    if (!line.equals("")) {
                        ch.info.append(line + "\n");
                    }
                }
            } catch (IOException ex) {
            }
        } else if (b.isSelected()) {
            try {
                Process p1 = Runtime.getRuntime().exec("C:/WINDOWS/system32/cmd.exe /C \"C:\\Program Files\\Internet Explorer\\iexplore.exe\" " + IP);
            } catch (IOException ex) {
            }


        }

        BufferedWriter write = null;
        try {
            write = new BufferedWriter(new FileWriter(new File("Config/configJOAuswahl.cfg")));
            if (save.isSelected()) {
                write.write("##config\n");
                write.write(user.getText() + "\n");
                write.write(domain.getText());
            } else {
                write.write("##---");
            }

            write.close();
        } catch (Exception ex) {
        }
        this.setVisible(false);
        this.dispose();
}//GEN-LAST:event_jButton1ActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void domainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_domainActionPerformed

    private void save(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_save
    }//GEN-LAST:event_save

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IPName;
    private javax.swing.JRadioButton b;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField domain;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton p;
    private javax.swing.JRadioButton r;
    private javax.swing.JCheckBox save;
    private javax.swing.JTextField user;
    private javax.swing.JRadioButton v;
    // End of variables declaration//GEN-END:variables
}
